{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/signup/signup.js","components/dashboard/dashboard.js","components/login/Login.js","routes/PrivateRoute.js","components/forgotpassword/ForgotPassword.js","components/updateprofile/UpdateProfile.js","components/prod_update/prod_update.js","components/tableComp/tableComp-react.js","components/tableComp/tableComp-datatable.js","components/tableComp/table-ka.js","components/prod_list/prod_list.js","components/cart/cart.js","components/place_order/place_order.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","className","Card","Body","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Dashboard","uid","onClick","Login","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","UpdateProfile","promises","Promise","all","then","catch","finally","defaultValue","placeholder","Prod_update","Product","data","name","setName","price","setPrice","code","setCode","onChange","target","db","firestore","updata","collection","doc","set","delete","window","location","reload","Styles","styled","div","defaultColumn","Cell","initialValue","index","row","column","updateMyData","setValue","onBlur","Table","columns","skipPageReset","useTable","autoResetPage","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","i","getRowProps","cells","cell","getCellProps","length","Number","style","width","TableCompReact","data0","docs","setData","console","log","useMemo","Header","accessor","originalData","setSkipPageReset","rowIndex","columnId","old","selector","sortable","editable","EditableCell","col","editing","BasicTable","data1","innerData","setInnerData","editingId","setEditingId","formData","isEditing","record","formOnChange","event","nam","val","cancel","mergedColumns","createColumns","useCallback","allowOverflow","minWidth","item","payload","tempData","findIndex","splice","save","backgroundColor","title","defaultSortField","EditingDemo","dataArray","tablePropsInit","key","dataType","DataType","String","format","Date","toLocaleDateString","month","day","year","editableCells","columnKey","rowKeyValue","editingMode","EditingMode","rowKeyField","tableProps","changeTableProps","dispatch","action","prevState","kaReducer","Prod_list","newProductName","setNewProductName","newProductPrice","setNewProductPrice","newProductCode","setNewProductCode","useCollection","snapshotListenOptions","includeMetadataChanges","add","Cart","user_oid","o_id","useDocumentDataOnce","orders","JSON","stringify","PlaceOrder","useCollectionDataOnce","where","u_loading","prod","set_user_oid","qty","setQty","onAddToCart","order_total","toString","update","FieldValue","arrayUnion","App","Container","minHeight","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0c91aa4.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\"\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n})\r\nexport const auth = app.auth();\r\n\r\nexport default app;\r\n","import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../firebase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function signup(email, password) {\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function login(email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function logout() {\r\n        return auth.signOut()\r\n    }\r\n\r\n    function resetPassword(email) {\r\n        return auth.sendPasswordResetEmail(email)\r\n    }\r\n\r\n    function updateEmail(email) {\r\n        return currentUser.updateEmail(email)\r\n    }\r\n\r\n    function updatePassword(password) {\r\n        return currentUser.updatePassword(password)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        signup,\r\n        logout,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\n\r\nexport default function Signup() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { signup } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await signup(emailRef.current.value, passwordRef.current.value)\r\n      history.push(\"/\")\r\n    } catch {\r\n      setError(\"Failed to create an account\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n      <>\r\n        <div className={\"\"}>\r\n        <div className={\"row\"}>\r\n        <Card>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"email\" ref={emailRef} required />\r\n              </Form.Group>\r\n              <Form.Group id=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" ref={passwordRef} required />\r\n              </Form.Group>\r\n              <Form.Group id=\"password-confirm\">\r\n                <Form.Label>Password Confirmation</Form.Label>\r\n                <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n              </Form.Group>\r\n              <Button disabled={loading} className=\"w-100 mt-2\" type=\"submit\">\r\n                Sign Up\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n        </div>\r\n        <div className=\"w-100 text-center mt-2 row\">\r\n          <span>Already have an account?</span>\r\n          <Link to=\"/login\">Log In</Link>\r\n        </div>\r\n        </div>\r\n\r\n      </>\r\n  )\r\n}\r\n","import React, { useState } from \"react\"\r\nimport { Card, Button, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\n\r\nexport default function Dashboard() {\r\n    const [error, setError] = useState(\"\")\r\n    const { currentUser, logout } = useAuth()\r\n    const history = useHistory()\r\n\r\n    async function handleLogout() {\r\n        setError(\"\")\r\n\r\n        try {\r\n            await logout()\r\n            history.push(\"/login\")\r\n        } catch {\r\n            setError(\"Failed to log out\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={\"\"}>\r\n            <div className={\"row\"}>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Profile</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <strong>Email:</strong> {currentUser.email}\r\n                    <br/>\r\n                    <strong>UUID:</strong> {currentUser.uid}\r\n                    <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">\r\n                        Update Profile\r\n                    </Link>\r\n\r\n\r\n                    <Link to=\"/product\" className=\"btn btn-primary w-100 mt-3\">\r\n                        Insert Product\r\n                    </Link>\r\n\r\n                    <Link to=\"/place_order\" className=\"btn btn-primary w-100 mt-3\">\r\n                        Place Order\r\n                    </Link>\r\n                </Card.Body>\r\n            </Card>\r\n            </div>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                <Button variant=\"link\" onClick={handleLogout}>\r\n                    Log Out\r\n                </Button>\r\n            </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { Link, useHistory } from \"react-router-dom\"\r\n\r\nexport default function Login() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const { login } = useAuth()\r\n    const [error, setError] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        } catch {\r\n            setError(\"Failed to log in\")\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={\"\"}>\r\n                <div className={\"row\"}>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Log In</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100 mt-3\" type=\"submit\">\r\n                            Log In\r\n                        </Button>\r\n                    </Form>\r\n                    <div className=\"w-100 text-center mt-3\">\r\n                        <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n                </div>\r\n            <div className=\"w-100 text-center mt-2 row\">\r\n                <span>Need an account?</span>\r\n                <Link to=\"/signup\">Sign Up</Link>\r\n            </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }}\r\n    ></Route>\r\n  )\r\n}\r\n","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../../contexts/AuthContext\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport default function ForgotPassword() {\r\n    const emailRef = useRef()\r\n    const { resetPassword } = useAuth()\r\n    const [error, setError] = useState(\"\")\r\n    const [message, setMessage] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setMessage(\"\")\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await resetPassword(emailRef.current.value)\r\n            setMessage(\"Check your inbox for further instructions\")\r\n        } catch {\r\n            setError(\"Failed to reset password\")\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Password Reset</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    {message && <Alert variant=\"success\">{message}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                            Reset Password\r\n                        </Button>\r\n                    </Form>\r\n                    <div className=\"w-100 text-center mt-3\">\r\n                        <Link to=\"/login\">Login</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\n\r\nexport default function UpdateProfile() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { currentUser, updatePassword, updateEmail } = useAuth()\r\n    const [error, setError] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError(\"Passwords do not match\")\r\n        }\r\n\r\n        const promises = []\r\n        setLoading(true)\r\n        setError(\"\")\r\n\r\n        if (emailRef.current.value !== currentUser.email) {\r\n            promises.push(updateEmail(emailRef.current.value))\r\n        }\r\n        if (passwordRef.current.value) {\r\n            promises.push(updatePassword(passwordRef.current.value))\r\n        }\r\n\r\n        Promise.all(promises)\r\n            .then(() => {\r\n                history.push(\"/\")\r\n            })\r\n            .catch(() => {\r\n                setError(\"Failed to update account\")\r\n            })\r\n            .finally(() => {\r\n                setLoading(false)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={\"\"}>\r\n            <div className={\"row\"}>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Update Profile</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                ref={emailRef}\r\n                                required\r\n                                defaultValue={currentUser.email}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                ref={passwordRef}\r\n                                placeholder=\"Leave blank to keep the same\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password-confirm\">\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                ref={passwordConfirmRef}\r\n                                placeholder=\"Leave blank to keep the same\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100 mt-2\" type=\"submit\">\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            </div>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                <Link to=\"/\">Cancel</Link>\r\n            </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React ,{useState} from 'react';\r\nimport firebase from 'firebase';\r\nconst Prod_update = ({ Product })=>{\r\n\r\n    const [name, setName] = useState(Product.data().name);\r\n    const [price, setPrice] = useState(Product.data().price);\r\n    const [code, setCode] = useState(Product.data().code);\r\n\r\n    const onUpdate = () => {\r\n        const db = firebase.firestore()\r\n        let updata = {name: name , code: code , price: price};\r\n        db.collection('prod_list').doc(Product.id).set(updata)\r\n\r\n\r\n    }\r\n\r\n    const onDelete = () => {\r\n        const db = firebase.firestore()\r\n        db.collection('prod_list').doc(Product.id).delete()\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={'row p-2'}>\r\n            <div className={'col-4 p-2'}>\r\n            <input\r\n                className={'form-control'}\r\n                value={name}\r\n                onChange={e => {\r\n                    setName(e.target.value);\r\n                }}\r\n            />\r\n            </div>\r\n            <div className={'col-4 p-2'}>\r\n            <input\r\n                className={'form-control'}\r\n                value={code}\r\n                onChange={e => {\r\n                    setCode(e.target.value);\r\n                }}\r\n            />\r\n            </div>\r\n            <div className={'col-4 p-2'}>\r\n            <input\r\n                className={'form-control'}\r\n                value={price}\r\n                onChange={e => {\r\n                    setPrice(e.target.value);\r\n                }}\r\n            />\r\n            </div>\r\n                <div className={'row'}>\r\n            <button className={'btn btn-primary col-8 m-1'} onClick={onUpdate}>Update</button>\r\n            <button className={'btn btn-danger col-3  m-1'} onClick={onDelete}>Delete</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default Prod_update;\r\n","import React, {useMemo, useEffect, useState} from 'react';\r\nimport { useTable ,usePagination} from \"react-table\";\r\nimport {useCollectionOnce} from \"react-firebase-hooks/firestore\";\r\nimport firebase from \"../../firebase\";\r\nimport styled from 'styled-components'\r\n\r\nconst Styles = styled.div`\r\n  padding: 1rem;\r\n\r\n  table {\r\n    border-spacing: 0;\r\n    border: 1px solid black;\r\n\r\n    tr {\r\n      :last-child {\r\n        td {\r\n          border-bottom: 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    th,\r\n    td {\r\n      margin: 0;\r\n      padding: 0.5rem;\r\n      border-bottom: 1px solid black;\r\n      border-right: 1px solid black;\r\n\r\n      :last-child {\r\n        border-right: 0;\r\n      }\r\n\r\n      input {\r\n        font-size: 1rem;\r\n        padding: 0;\r\n        margin: 0;\r\n        border: 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  .pagination {\r\n    padding: 0.5rem;\r\n  }\r\n`\r\n\r\n// Create an editable cell renderer\r\nconst EditableCell = ({\r\n  value: initialValue,\r\n  row: { index },\r\n  column: { id },\r\n  updateMyData, // This is a custom function that we supplied to our table instance\r\n}) => {\r\n  // We need to keep and update the state of the cell normally\r\n  const [value, setValue] = useState(initialValue)\r\n\r\n  const onChange = e => {\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  // We'll only update the external data when the input is blurred\r\n  const onBlur = () => {\r\n    updateMyData(index, id, value)\r\n  }\r\n\r\n  // If the initialValue is changed external, sync it up with our state\r\n  useEffect(() => {\r\n    setValue(initialValue)\r\n  }, [initialValue])\r\n\r\n  return <input value={value} onChange={onChange} onBlur={onBlur} />\r\n}\r\n\r\n// Set our editable cell renderer as the default Cell renderer\r\nconst defaultColumn = {\r\n  Cell: EditableCell,\r\n}\r\n\r\n// Be sure to pass our updateMyData and the skipPageReset option\r\nfunction Table({ columns, data, updateMyData, skipPageReset }) {\r\n  // For this example, we're using pagination to illustrate how to stop\r\n  // the current page from resetting when our data changes\r\n  // Otherwise, nothing is different here.\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn,\r\n      // use the skipPageReset option to disable page resetting temporarily\r\n      autoResetPage: !skipPageReset,\r\n      // updateMyData isn't part of the API, but\r\n      // anything we put into these options will\r\n      // automatically be available on the instance.\r\n      // That way we can call this function from our\r\n      // cell renderer!\r\n      updateMyData,\r\n    },\r\n    usePagination\r\n  )\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <>\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                })}\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"pagination\">\r\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {'<<'}\r\n        </button>{' '}\r\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {'<'}\r\n        </button>{' '}\r\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {'>'}\r\n        </button>{' '}\r\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {'>>'}\r\n        </button>{' '}\r\n        <span>\r\n          Page{' '}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <span>\r\n          | Go to page:{' '}\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={e => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n              gotoPage(page)\r\n            }}\r\n            style={{ width: '100px' }}\r\n          />\r\n        </span>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value))\r\n          }}\r\n        >\r\n          {[10, 20, 30, 40, 50].map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Show {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default function TableCompReact(Product) {\r\n    \r\n    let data0 = Product.Product.docs.map(doc => ({ ...doc.data(), id: doc.id }));\r\n    const [data, setData] = useState(data0)\r\n    console.log(data);\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Name',\r\n                accessor: 'name', // accessor is the \"key\" in the data\r\n            },\r\n            {\r\n                Header: 'Price',\r\n                accessor: 'price',\r\n            },\r\n            {\r\n                Header: 'Code',\r\n                accessor: 'code',\r\n            },\r\n        ],\r\n        [])\r\n  \r\n    const [originalData] = useState(data)\r\n    const [skipPageReset, setSkipPageReset] = useState(false)\r\n  \r\n    // We need to keep the table from resetting the pageIndex when we\r\n    // Update data. So we can keep track of that flag with a ref.\r\n  \r\n    // When our cell renderer calls updateMyData, we'll use\r\n    // the rowIndex, columnId and new value to update the\r\n    // original data\r\n    const updateMyData = (rowIndex, columnId, value) => {\r\n      // We also turn on the flag to not reset the page\r\n      setSkipPageReset(true)\r\n      setData(old =>\r\n        old.map((row, index) => {\r\n          if (index === rowIndex) {\r\n            return {\r\n              ...old[rowIndex],\r\n              [columnId]: value,\r\n            }\r\n          }\r\n          return row\r\n        })\r\n      )\r\n    }\r\n  \r\n    // After data chagnes, we turn the flag back off\r\n    // so that if data actually changes when we're not\r\n    // editing it, the page is reset\r\n    useEffect(() => {\r\n      setSkipPageReset(false)\r\n    }, [data])\r\n  \r\n    // Let's add a data resetter/randomizer to help\r\n    // illustrate that flow...\r\n    const resetData = () => setData(originalData)\r\n  \r\n    return (\r\n      <Styles>\r\n        <button onClick={resetData}>Reset Data</button>\r\n        <Table\r\n          columns={columns}\r\n          data={data}\r\n          updateMyData={updateMyData}\r\n          skipPageReset={skipPageReset}\r\n        />\r\n      </Styles>\r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useCallback, useEffect, useRef, useState} from 'react';\r\n\r\n\r\nimport DataTable from 'react-data-table-component';\r\nimport firebase from \"../../firebase\";\r\n\r\n\r\nconst columns = [\r\n    {\r\n        name: 'Title',\r\n        selector: 'name',\r\n        sortable: true,\r\n        editable: true,\r\n    },\r\n    {\r\n        name: 'Price',\r\n        selector: 'price',\r\n        sortable: true,\r\n        editable: true,\r\n    },\r\n    {\r\n        name: 'Prod ID',\r\n        selector: 'code',\r\n        sortable: true,\r\n    },\r\n];\r\n\r\nconst EditableCell = ({ row, index, column, col, onChange }) => {\r\n    const [value, setValue] = useState(row[column.selector]);\r\n\r\n    const handleOnChange = e => {\r\n        setValue(e.target.value);\r\n        onChange?.(e);\r\n    };\r\n\r\n    if (column?.editing) {\r\n        return (\r\n            <input\r\n                type={column.type || 'text'}\r\n                name={column.selector}\r\n                style={{ width: '100%' }}\r\n                onChange={handleOnChange}\r\n                value={value}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (col.cell) {\r\n        return col.cell(row, index, column);\r\n    }\r\n    return row[column.selector];\r\n};\r\n\r\nexport default function BasicTable(Product) {\r\n\r\n    let data1 = Product.Product.docs.map(doc => ({ ...doc.data(), id: doc.id }));\r\n    console.log(data1);\r\n\r\n    const [innerData, setInnerData] = useState(data1);\r\n    const [editingId, setEditingId] = useState('');\r\n    let formData = useRef({}).current;\r\n    const isEditing = record => record.id === editingId;\r\n\r\n    const formOnChange = event => {\r\n        const nam = event.target.name;\r\n        const val = event.target.value;\r\n\r\n        formData = {\r\n            ...formData,\r\n            [nam]: val,\r\n        };\r\n    };\r\n\r\n    const edit = record => {\r\n        setEditingId(record.id);\r\n    };\r\n\r\n    const cancel = () => {\r\n        setEditingId('');\r\n    };\r\n\r\n    const save = item => {\r\n        const payload = { ...item, ...formData };\r\n        const tempData = [...innerData];\r\n\r\n\r\n        const index = tempData.findIndex(item => editingId === item.id);\r\n        if (index > -1) {\r\n\r\n            const item = tempData[index];\r\n            tempData.splice(index, 1, {\r\n                ...item,\r\n                ...payload,\r\n            });\r\n            setEditingId('');\r\n            setInnerData(tempData);\r\n        }\r\n    };\r\n\r\n    const mergedColumns = columns.map(col => {\r\n        if (!col.editable) {\r\n            return col;\r\n        }\r\n        return {\r\n            ...col,\r\n            cell: (row, index, column) => {\r\n                const editing = isEditing(row);\r\n                return (\r\n                    <EditableCell\r\n                        row={row}\r\n                        index={index}\r\n                        column={{ ...column, editing }}\r\n                        col={col}\r\n                        onChange={formOnChange}\r\n                    />\r\n                );\r\n            },\r\n        };\r\n    });\r\n\r\n    const createColumns = useCallback(() => {\r\n        return [\r\n            ...mergedColumns,\r\n            {\r\n                name: 'Actions',\r\n                allowOverflow: true,\r\n                minWidth: '200px',\r\n                cell: row => {\r\n                    const editable = isEditing(row);\r\n                    if (editable) {\r\n                        return (\r\n                            <div>\r\n                                <button type=\"button\" onClick={() => save(row)} style={{ backgroundColor: 'lightgreen' }}>save</button>\r\n                                <button type=\"button\" onClick={cancel} style={{ backgroundColor: 'orangered' }}>cancel</button>\r\n                            </div>\r\n                        );\r\n                    }\r\n                    return <button type=\"button\" onClick={() => edit(row)} style={{ backgroundColor: 'aliceblue' }}>edit</button>;\r\n                },\r\n            },\r\n        ];\r\n    }, [mergedColumns]);\r\n\r\n    return (\r\n        <DataTable\r\n            title=\"Movie List\"\r\n            columns={createColumns()}\r\n            data={innerData}\r\n            defaultSortField=\"title\"\r\n        />\r\n    );\r\n};\r\n","import React, { useRef, useState, useEffect } from \"react\"\r\nimport \"ka-table/style.css\"\r\nimport { ITableProps, kaReducer, Table } from 'ka-table';\r\nimport {\r\n    hideLoading,\r\n    loadData,\r\n    setSingleAction,\r\n    showLoading,\r\n    updateData,\r\n    updatePagesCount\r\n} from \"ka-table/actionCreators\";\r\nimport { DataType, EditingMode } from 'ka-table/enums';\r\nimport { DispatchFunc } from 'ka-table/types';\r\nimport firebase from \"../../firebase\";\r\nimport {useCollection, useCollectionOnce} from \"react-firebase-hooks/firestore\";\r\n\r\nfunction EditingDemo(Product) {\r\n\r\n\r\n   let dataArray = Product.Product.docs.map(doc => ({ ...doc.data(), id: doc.id }));\r\n   console.log(dataArray);\r\n\r\n    const tablePropsInit = {\r\n        columns: [\r\n            {key: 'name', title: 'Name', dataType: DataType.String, style: {width: '30%'}},\r\n            {key: 'code', title: 'Code', dataType: DataType.String, style: {width: '30%'}},\r\n            {key: 'price', title: 'Price', dataType: DataType.String, style: {width: '10%'}},\r\n        ],\r\n        format: ({column, value}) => {\r\n            if (column.dataType === DataType.Date) {\r\n                return value && value.toLocaleDateString('en', {month: '2-digit', day: '2-digit', year: 'numeric'});\r\n            }\r\n        },\r\n        data: dataArray,\r\n        editableCells: [{\r\n            columnKey: 'name',\r\n            rowKeyValue: 2,\r\n        }],\r\n        editingMode: EditingMode.Cell,\r\n        rowKeyField: 'id',\r\n    };\r\n\r\n    const [tableProps, changeTableProps] = useState(tablePropsInit);\r\n    const dispatch = (action) => {\r\n        changeTableProps((prevState) => kaReducer(prevState, action));\r\n    };\r\n            return (\r\n                <Table\r\n                    {...tableProps}\r\n                    dispatch={dispatch}\r\n                />\r\n            )\r\n}\r\n\r\nexport default EditingDemo;\r\n","import React, { useRef, useState, useEffect } from \"react\"\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport firebase from \"firebase/app\";\r\nimport Prod_update from \"../prod_update/prod_update\";\r\nimport TableCompReact from \"../tableComp/tableComp-react\";\r\nimport BasicTable from '../tableComp/tableComp-datatable'\r\nimport EditingDemo from \"../tableComp/table-ka\"\r\nimport {useCollection} from \"react-firebase-hooks/firestore\";\r\n\r\nexport default function Prod_list() {\r\n    const { currentUser, logout } = useAuth()\r\n    const [newProductName, setNewProductName] = useState();\r\n    const [newProductPrice, setNewProductPrice] = useState();\r\n    const [newProductCode, setNewProductCode] = useState();\r\n\r\n\r\n    //this is react-firebase-hook works but have to async it somehow\r\n     const [Product, prod_loading, prod_error] = useCollection(\r\n        firebase.firestore().collection('prod_list'),\r\n        {\r\n            snapshotListenOptions: { includeMetadataChanges: true },\r\n        }\r\n    );\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('0');\r\n    }, [Product]);\r\n\r\n    const onCreate = () => {\r\n        const db = firebase.firestore();\r\n        db.collection(\"prod_list\").add({ name: newProductName , price: newProductPrice ,code: newProductCode  });\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={'container'}>\r\n                <div className={'row'}>\r\n                    <p>\r\n                        <strong>UUID: {currentUser.uid} </strong>\r\n                    </p>\r\n                </div>\r\n\r\n                    {/*Create New Product Code Here*/}\r\n                    <div className={'row p-5 mb-2'}>\r\n                        <input className={'form-control mt-2'} value={newProductCode} onChange={e => setNewProductCode(e.target.value)} placeholder={'New Product Code'}/>\r\n                        <input className={'form-control mt-2'} value={newProductName} onChange={e => setNewProductName(e.target.value)}  placeholder={'New Product Name'}/>\r\n                        <input className={'form-control mt-2'} value={newProductPrice} onChange={e => setNewProductPrice(e.target.value)}  placeholder={'New Product Price'}/>\r\n                        <button className={'btn btn-primary mt-2'} onClick={onCreate}>Create</button>\r\n                    </div>\r\n                    {/*Below Code To Update product*/}\r\n                    <div className={'row'}>\r\n                        <ul className={'w-100'}>\r\n                            {Product && Product.docs.map(Product => (\r\n                                <li key={Product.id}>\r\n                                    <Prod_update Product={Product} />\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n\r\n                <div className={'row p-2 col-12'}>\r\n                    <span>Ka-Table blank array</span>\r\n                    {Product &&  <EditingDemo Product={Product}/> }\r\n                </div>\r\n                <div className={'row p-2 col-12'}>\r\n                    <span>react-table blank array</span>\r\n\r\n                    {Product && <TableCompReact  Product={Product}/>}\r\n\r\n                </div>\r\n                <div className={'row p-2 col-12'}>\r\n                    <span>react-data-table blank array</span>\r\n                    {Product &&  <BasicTable Product={Product} />}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState , useEffect } from 'react';\r\nimport { useAuth } from \"../../contexts/AuthContext\"\r\nimport firebase from \"firebase/app\"\r\n\r\nimport {useDocumentDataOnce} from \"react-firebase-hooks/firestore\";\r\n\r\n\r\n\r\n\r\nfunction Cart(user_oid) {\r\n    const { currentUser, logout } = useAuth()\r\n    const uid = currentUser.uid; //using as ref for other table from authcontext\r\n\r\n    let o_id = user_oid.user_oid;\r\n\r\n\r\n    const [orders, loading, error] = useDocumentDataOnce(firebase.firestore().doc(\"order/\"+o_id),\r\n        {\r\n            snapshotListenOptions: { includeMetadataChanges: true },\r\n        });\r\n    useEffect(() =>\r\n\r\n    console.log(orders )\r\n        ,[orders])\r\n\r\n    //\r\n    // const [price, setPrice] = useState();\r\n    // const [code, setCode] = useState();\r\n    // const [qty, setQty] = useState();\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <span>{orders && <span>Document: {JSON.stringify(orders)}</span>}</span>\r\n                {error && <strong>Error: {JSON.stringify(error)}</strong>}\r\n                {loading && <span>Document: Loading...</span>}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Cart;\r\n","import React, { useState , useEffect } from 'react';\r\nimport { useAuth } from \"../../contexts/AuthContext\"\r\nimport firebase from \"firebase/app\"\r\nimport Cart from '../cart/cart.js';\r\nimport {useCollectionDataOnce} from \"react-firebase-hooks/firestore\";\r\n\r\n\r\n\r\n\r\nfunction PlaceOrder(props) {\r\n    const { currentUser, logout } = useAuth()\r\n    const uid = currentUser.uid; //using as ref for other table from authcontext\r\n\r\n    const [Product, setProduct] = useState([]);\r\n    const [user, u_loading, u_error] = useCollectionDataOnce(firebase.firestore().collection('users').where('UUID','==',uid),\r\n        {\r\n            snapshotListenOptions: { includeMetadataChanges: true },\r\n        });\r\n    const [prod, prod_loading, prod_error] = useCollectionDataOnce(firebase.firestore().collection('prod_list'),\r\n        {\r\n            snapshotListenOptions: { includeMetadataChanges: true },\r\n        });\r\n    const [user_oid, set_user_oid] = useState();\r\n\r\n    const [price, setPrice] = useState();\r\n    const [code, setCode] = useState();\r\n    const [qty, setQty] = useState();\r\n\r\n\r\n    /*useEffect(() => {\r\n        const fetchData = async () => {\r\n            const db = firebase.firestore();\r\n            const data = await db.collection(\"prod_list\").get();\r\n            setProduct(data.docs.map(doc => ({...doc.data(), id: doc.id})));\r\n\r\n        };\r\n        fetchData();\r\n    }, [Product]);*/\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(u_loading === false ){\r\n            set_user_oid(user[0]['current_order_id']);\r\n            console.log('haliu');\r\n            console.log(user);\r\n            console.log(prod)\r\n\r\n        };\r\n\r\n    }, [prod]);\r\n\r\n\r\n\r\n\r\n\r\n    async function onAddToCart() {\r\n        console.log([price, code ,uid , qty]);\r\n        let order_total = price * qty;\r\n        // cannot do array in array\r\n        // let order_array = ['price: '+price,'code: '+code ,'qty: '+qty ,'order_total: '+order_total];\r\n        // let o_price = [price];\r\n        // let o_code = [price];\r\n        // let o_qty = [qty];\r\n        // let o_order_total = [order_total];\r\n        // no need to make it value array , string can be also added\r\n        // const admin = require('firebase-admin');\r\n        let o_id = user_oid.toString();\r\n        const db =  firebase.firestore().collection(\"order\").doc(o_id);\r\n        // const u_q= await db.update({timestamp: firebase.firestore.FieldValue.serverTimestamp()`})\r\n\r\n       const update_query = await db.update({price: firebase.firestore.FieldValue.arrayUnion(price),code: firebase.firestore.FieldValue.arrayUnion(code),qty:firebase.firestore.FieldValue.arrayUnion(qty),order_total:firebase.firestore.FieldValue.arrayUnion(order_total)});\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                    <h5>In Cart Data:</h5>\r\n                {user_oid &&\r\n                < Cart user_oid={user_oid}></Cart>\r\n                }\r\n            <div>\r\n                <h1>Place Order</h1>\r\n            </div>\r\n\r\n            <div>\r\n                <ul className={'w-100'}>\r\n                    {prod && prod.map(prod => (\r\n                        <li key={prod.code} className={'mt-2'}>\r\n\r\n                            <span className={'col-4 p-2'}>Code: {prod.code}</span>\r\n                            <span className={'col-4 p-2'}>Name: {prod.name}</span>\r\n                            <span className={'col-4 p-2'}>Price: {prod.price}</span>\r\n                            <div className={'row'}>\r\n\r\n                            <input className={'col-8 mr-2'} type={'number'} onChange={e => { setQty(e.target.value); setCode(prod.code); setPrice(prod.price); }}/>\r\n                            <button className={'col-3 btn btn-primary'} onClick={onAddToCart}>Place Order</button>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PlaceOrder;\r\n","import React from \"react\"\r\nimport Signup from \"./components/signup/signup\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport { AuthProvider } from \"./contexts/AuthContext\"\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\nimport Dashboard from \"./components/dashboard/dashboard\"\r\nimport Login from \"./components/login/Login\"\r\nimport PrivateRoute from \"./routes/PrivateRoute\"\r\nimport ForgotPassword from \"./components/forgotpassword/ForgotPassword\"\r\nimport UpdateProfile from \"./components/updateprofile/UpdateProfile\"\r\nimport Prod_update from \"./components/prod_update/prod_update\"\r\nimport Prod_list from \"./components/prod_list/prod_list\"\r\nimport PlaceOrder from \"./components/place_order/place_order\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Container\r\n            className=\"d-flex align-items-center justify-content-center\"\r\n            style={{ minHeight: \"100vh\" }}\r\n        >\r\n\r\n                <Router>\r\n                    <AuthProvider>\r\n                        <Switch>\r\n                            <PrivateRoute exact path=\"/\" component={Dashboard} />\r\n                            <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\r\n                            <PrivateRoute path=\"/product\" component={Prod_list} />\r\n                            <PrivateRoute path=\"/place_order\" component={PlaceOrder} />\r\n\r\n                            <Route path=\"/signup\" component={Signup} />\r\n                            <Route path=\"/login\" component={Login} />\r\n                            <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n                        </Switch>\r\n                    </AuthProvider>\r\n                </Router>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}