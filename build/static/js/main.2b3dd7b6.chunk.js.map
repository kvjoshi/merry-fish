{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/signup/signup.js","components/dashboard/dashboard.js","components/login/Login.js","routes/PrivateRoute.js","components/forgotpassword/ForgotPassword.js","components/updateprofile/UpdateProfile.js","components/prod_update/prod_update.js","components/tableComp/tableComp-react.js","components/tableComp/tableComp-datatable.js","components/tableComp/table-ka.js","components/prod_list/prod_list.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","className","Card","Body","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Dashboard","onClick","Login","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","UpdateProfile","promises","Promise","all","then","catch","finally","defaultValue","placeholder","Prod_update","Product","name","setName","price","setPrice","code","setCode","onChange","target","db","firestore","updata","collection","doc","set","delete","TableCompReact","data","columns","useMemo","Header","accessor","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","style","border","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","borderBottom","background","color","fontWeight","row","getRowProps","cells","cell","getCellProps","padding","selector","sortable","editable","EditableCell","index","col","setValue","editing","width","BasicTable","setProduct","get","docs","console","log","fetchData","data1","innerData","setInnerData","editingId","setEditingId","formData","isEditing","record","formOnChange","event","nam","val","cancel","mergedColumns","createColumns","useCallback","allowOverflow","minWidth","item","payload","tempData","findIndex","splice","save","backgroundColor","title","defaultSortField","EditingDemo","dataArray","setdataArray","tablePropsInit","key","dataType","DataType","String","Number","Boolean","format","Date","toLocaleDateString","month","day","year","editableCells","columnKey","rowKeyValue","editingMode","EditingMode","Cell","rowKeyField","tableProps","changeTableProps","dispatch","action","prevState","kaReducer","Prod_list","newProductName","setNewProductName","newProductPrice","setNewProductPrice","newProductCode","setNewProductCode","useCollection","snapshotListenOptions","includeMetadataChanges","add","App","Container","minHeight","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b3dd7b6.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/firestore\"\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n})\r\nexport const auth = app.auth()\r\nexport default app\r\n","import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../firebase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function signup(email, password) {\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function login(email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function logout() {\r\n        return auth.signOut()\r\n    }\r\n\r\n    function resetPassword(email) {\r\n        return auth.sendPasswordResetEmail(email)\r\n    }\r\n\r\n    function updateEmail(email) {\r\n        return currentUser.updateEmail(email)\r\n    }\r\n\r\n    function updatePassword(password) {\r\n        return currentUser.updatePassword(password)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        signup,\r\n        logout,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\n\r\nexport default function Signup() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { signup } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await signup(emailRef.current.value, passwordRef.current.value)\r\n      history.push(\"/\")\r\n    } catch {\r\n      setError(\"Failed to create an account\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n      <>\r\n        <div className={\"\"}>\r\n        <div className={\"row\"}>\r\n        <Card>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"email\" ref={emailRef} required />\r\n              </Form.Group>\r\n              <Form.Group id=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" ref={passwordRef} required />\r\n              </Form.Group>\r\n              <Form.Group id=\"password-confirm\">\r\n                <Form.Label>Password Confirmation</Form.Label>\r\n                <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n              </Form.Group>\r\n              <Button disabled={loading} className=\"w-100 mt-2\" type=\"submit\">\r\n                Sign Up\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n        </div>\r\n        <div className=\"w-100 text-center mt-2 row\">\r\n          <span>Already have an account?</span>\r\n          <Link to=\"/login\">Log In</Link>\r\n        </div>\r\n        </div>\r\n\r\n      </>\r\n  )\r\n}\r\n","import React, { useState } from \"react\"\r\nimport { Card, Button, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\n\r\nexport default function Dashboard() {\r\n    const [error, setError] = useState(\"\")\r\n    const { currentUser, logout } = useAuth()\r\n    const history = useHistory()\r\n\r\n    async function handleLogout() {\r\n        setError(\"\")\r\n\r\n        try {\r\n            await logout()\r\n            history.push(\"/login\")\r\n        } catch {\r\n            setError(\"Failed to log out\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={\"\"}>\r\n            <div className={\"row\"}>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Profile</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <strong>Email:</strong> {currentUser.email}\r\n                    <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">\r\n                        Update Profile\r\n                    </Link>\r\n\r\n\r\n                    <Link to=\"/product\" className=\"btn btn-primary w-100 mt-3\">\r\n                        Insert Product\r\n                    </Link>\r\n                </Card.Body>\r\n            </Card>\r\n            </div>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                <Button variant=\"link\" onClick={handleLogout}>\r\n                    Log Out\r\n                </Button>\r\n            </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { Link, useHistory } from \"react-router-dom\"\r\n\r\nexport default function Login() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const { login } = useAuth()\r\n    const [error, setError] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        } catch {\r\n            setError(\"Failed to log in\")\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={\"\"}>\r\n                <div className={\"row\"}>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Log In</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100 mt-3\" type=\"submit\">\r\n                            Log In\r\n                        </Button>\r\n                    </Form>\r\n                    <div className=\"w-100 text-center mt-3\">\r\n                        <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n                </div>\r\n            <div className=\"w-100 text-center mt-2 row\">\r\n                <span>Need an account?</span>\r\n                <Link to=\"/signup\">Sign Up</Link>\r\n            </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }}\r\n    ></Route>\r\n  )\r\n}\r\n","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../../contexts/AuthContext\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport default function ForgotPassword() {\r\n    const emailRef = useRef()\r\n    const { resetPassword } = useAuth()\r\n    const [error, setError] = useState(\"\")\r\n    const [message, setMessage] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setMessage(\"\")\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await resetPassword(emailRef.current.value)\r\n            setMessage(\"Check your inbox for further instructions\")\r\n        } catch {\r\n            setError(\"Failed to reset password\")\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Password Reset</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    {message && <Alert variant=\"success\">{message}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                            Reset Password\r\n                        </Button>\r\n                    </Form>\r\n                    <div className=\"w-100 text-center mt-3\">\r\n                        <Link to=\"/login\">Login</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\n\r\nexport default function UpdateProfile() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { currentUser, updatePassword, updateEmail } = useAuth()\r\n    const [error, setError] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError(\"Passwords do not match\")\r\n        }\r\n\r\n        const promises = []\r\n        setLoading(true)\r\n        setError(\"\")\r\n\r\n        if (emailRef.current.value !== currentUser.email) {\r\n            promises.push(updateEmail(emailRef.current.value))\r\n        }\r\n        if (passwordRef.current.value) {\r\n            promises.push(updatePassword(passwordRef.current.value))\r\n        }\r\n\r\n        Promise.all(promises)\r\n            .then(() => {\r\n                history.push(\"/\")\r\n            })\r\n            .catch(() => {\r\n                setError(\"Failed to update account\")\r\n            })\r\n            .finally(() => {\r\n                setLoading(false)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={\"\"}>\r\n            <div className={\"row\"}>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Update Profile</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                ref={emailRef}\r\n                                required\r\n                                defaultValue={currentUser.email}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                ref={passwordRef}\r\n                                placeholder=\"Leave blank to keep the same\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password-confirm\">\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                ref={passwordConfirmRef}\r\n                                placeholder=\"Leave blank to keep the same\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100 mt-2\" type=\"submit\">\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            </div>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                <Link to=\"/\">Cancel</Link>\r\n            </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React ,{useState} from 'react';\r\nimport firebase from 'firebase';\r\nconst Prod_update = ({ Product })=>{\r\n\r\n    const [name, setName] = useState(Product.name);\r\n    const [price, setPrice] = useState(Product.price);\r\n    const [code, setCode] = useState(Product.code);\r\n\r\n    const onUpdate = () => {\r\n        const db = firebase.firestore()\r\n        let updata = {name: name , code: code , price: price};\r\n        db.collection('prod_list').doc(Product.id).set(updata)\r\n\r\n    }\r\n\r\n    const onDelete = () => {\r\n        const db = firebase.firestore()\r\n        db.collection('prod_list').doc(Product.id).delete()\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={'row p-2'}>\r\n            <div className={'col-4 p-2'}>\r\n            <input\r\n                className={'form-control'}\r\n                value={name}\r\n                onChange={e => {\r\n                    setName(e.target.value);\r\n                }}\r\n            />\r\n            </div>\r\n            <div className={'col-4 p-2'}>\r\n            <input\r\n                className={'form-control'}\r\n                value={code}\r\n                onChange={e => {\r\n                    setCode(e.target.value);\r\n                }}\r\n            />\r\n            </div>\r\n            <div className={'col-4 p-2'}>\r\n            <input\r\n                className={'form-control'}\r\n                value={price}\r\n                onChange={e => {\r\n                    setPrice(e.target.value);\r\n                }}\r\n            />\r\n            </div>\r\n                <div className={'row'}>\r\n            <button className={'btn btn-primary col-8 m-1'} onClick={onUpdate}>Update</button>\r\n            <button className={'btn btn-danger col-3  m-1'} onClick={onDelete}>Delete</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default Prod_update;\r\n","import React, {useMemo, useEffect, useState} from 'react';\r\nimport { useTable } from \"react-table\";\r\nimport {useCollectionOnce} from \"react-firebase-hooks/firestore\";\r\nimport firebase from \"../../firebase\";\r\n\r\n\r\n\r\n\r\nexport default function TableCompReact(Product) {\r\n\r\n\r\n       /* const [value, loading, error] = useCollectionOnce(\r\n        firebase.firestore().collection('prod_list'),\r\n        {\r\n            snapshotListenOptions: { includeMetadataChanges: true },\r\n        }\r\n    );\r\n\r\n\r\n    if(loading === 'false'){\r\n        data = value.docs.map(doc => ({ ...doc.data(), id: doc.id }));\r\n    }\r\n\r\n   console.log(loading);*/\r\n\r\n    let data = [];\r\n     // data=JSON.stringify(Product.Product);\r\n\r\n    // console.log(Product.Product)\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Name',\r\n                accessor: 'col1', // accessor is the \"key\" in the data\r\n            },\r\n            {\r\n                Header: 'Price',\r\n                accessor: 'col2',\r\n            },\r\n            {\r\n                Header: 'Code',\r\n                accessor: 'col3',\r\n            },\r\n        ],\r\n        [])\r\n    const tableInstance = useTable({ columns, data })\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n    } = useTable({ columns, data })\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <table {...getTableProps()} style={{ border: 'solid 1px blue' }}>\r\n                <thead>\r\n                {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map(column => (\r\n                            <th\r\n                                {...column.getHeaderProps()}\r\n                                style={{\r\n                                    borderBottom: 'solid 3px red',\r\n                                    background: 'aliceblue',\r\n                                    color: 'black',\r\n                                    fontWeight: 'bold',\r\n                                }}\r\n                            >\r\n                                {column.render('Header')}\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                {rows.map(row => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                return (\r\n                                    <td\r\n                                        {...cell.getCellProps()}\r\n                                        style={{\r\n                                            padding: '10px',\r\n                                            border: 'solid 1px gray',\r\n                                            background: 'papayawhip',\r\n                                        }}\r\n                                    >\r\n                                        {cell.render('Cell')}\r\n                                    </td>\r\n                                )\r\n                            })}\r\n                        </tr>\r\n                    )\r\n                })}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useCallback, useEffect, useRef, useState} from 'react';\r\n\r\n\r\nimport DataTable from 'react-data-table-component';\r\nimport firebase from \"../../firebase\";\r\n\r\n\r\nconst columns = [\r\n    {\r\n        name: 'Title',\r\n        selector: 'name',\r\n        sortable: true,\r\n        editable: true,\r\n    },\r\n    {\r\n        name: 'Director',\r\n        selector: 'price',\r\n        sortable: true,\r\n        editable: true,\r\n    },\r\n    {\r\n        name: 'Year',\r\n        selector: 'id',\r\n        sortable: true,\r\n    },\r\n];\r\n\r\nconst EditableCell = ({ row, index, column, col, onChange }) => {\r\n    const [value, setValue] = useState(row[column.selector]);\r\n\r\n    const handleOnChange = e => {\r\n        setValue(e.target.value);\r\n        onChange?.(e);\r\n    };\r\n\r\n    if (column?.editing) {\r\n        return (\r\n            <input\r\n                type={column.type || 'text'}\r\n                name={column.selector}\r\n                style={{ width: '100%' }}\r\n                onChange={handleOnChange}\r\n                value={value}\r\n            />\r\n        );\r\n    }\r\n\r\n    if (col.cell) {\r\n        return col.cell(row, index, column);\r\n    }\r\n    return row[column.selector];\r\n};\r\n\r\nexport default function BasicTable() {\r\n\r\n    const [Product, setProduct] = useState([]);\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const db = firebase.firestore();\r\n            const data = await db.collection(\"prod_list\").get();\r\n            setProduct(data.docs.map(doc => ({ ...doc.data()})));\r\n            console.log(Product)\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    let data1=Product;\r\n\r\n    const [innerData, setInnerData] = useState(data1);\r\n    const [editingId, setEditingId] = useState('');\r\n    let formData = useRef({}).current;\r\n    const isEditing = record => record.id === editingId;\r\n\r\n    const formOnChange = event => {\r\n        const nam = event.target.name;\r\n        const val = event.target.value;\r\n\r\n        formData = {\r\n            ...formData,\r\n            [nam]: val,\r\n        };\r\n    };\r\n\r\n    const edit = record => {\r\n        setEditingId(record.id);\r\n    };\r\n\r\n    const cancel = () => {\r\n        setEditingId('');\r\n    };\r\n\r\n    const save = item => {\r\n        const payload = { ...item, ...formData };\r\n        const tempData = [...innerData];\r\n\r\n\r\n        const index = tempData.findIndex(item => editingId === item.id);\r\n        if (index > -1) {\r\n\r\n            const item = tempData[index];\r\n            tempData.splice(index, 1, {\r\n                ...item,\r\n                ...payload,\r\n            });\r\n            setEditingId('');\r\n            setInnerData(tempData);\r\n        }\r\n    };\r\n\r\n    const mergedColumns = columns.map(col => {\r\n        if (!col.editable) {\r\n            return col;\r\n        }\r\n        return {\r\n            ...col,\r\n            cell: (row, index, column) => {\r\n                const editing = isEditing(row);\r\n                return (\r\n                    <EditableCell\r\n                        row={row}\r\n                        index={index}\r\n                        column={{ ...column, editing }}\r\n                        col={col}\r\n                        onChange={formOnChange}\r\n                    />\r\n                );\r\n            },\r\n        };\r\n    });\r\n\r\n    const createColumns = useCallback(() => {\r\n        return [\r\n            ...mergedColumns,\r\n            {\r\n                name: 'Actions',\r\n                allowOverflow: true,\r\n                minWidth: '200px',\r\n                cell: row => {\r\n                    const editable = isEditing(row);\r\n                    if (editable) {\r\n                        return (\r\n                            <div>\r\n                                <button type=\"button\" onClick={() => save(row)} style={{ backgroundColor: 'lightgreen' }}>save</button>\r\n                                <button type=\"button\" onClick={cancel} style={{ backgroundColor: 'orangered' }}>cancel</button>\r\n                            </div>\r\n                        );\r\n                    }\r\n                    return <button type=\"button\" onClick={() => edit(row)} style={{ backgroundColor: 'aliceblue' }}>edit</button>;\r\n                },\r\n            },\r\n        ];\r\n    }, [mergedColumns]);\r\n\r\n    return (\r\n        <DataTable\r\n            title=\"Movie List\"\r\n            columns={createColumns()}\r\n            data={innerData}\r\n            defaultSortField=\"title\"\r\n        />\r\n    );\r\n};\r\n","import React, { useRef, useState, useEffect } from \"react\"\r\nimport \"ka-table/style.css\"\r\nimport { ITableProps, kaReducer, Table } from 'ka-table';\r\nimport {\r\n    hideLoading,\r\n    loadData,\r\n    setSingleAction,\r\n    showLoading,\r\n    updateData,\r\n    updatePagesCount\r\n} from \"ka-table/actionCreators\";\r\nimport { DataType, EditingMode } from 'ka-table/enums';\r\nimport { DispatchFunc } from 'ka-table/types';\r\nimport firebase from \"../../firebase\";\r\nimport {useCollection, useCollectionOnce} from \"react-firebase-hooks/firestore\";\r\n\r\nfunction EditingDemo() {\r\n\r\n    const [dataArray, setdataArray] = useState([]);\r\n    const [Product, setProduct] = useState([]);\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const db = firebase.firestore();\r\n            const data = await db.collection(\"prod_list\").get();\r\n            setProduct(data.docs.map(doc => ({ ...doc.data()})));\r\n            setdataArray(data.docs.map(doc => ({ ...doc.data()})));\r\n        };\r\n        fetchData();\r\n    }, [dataArray]);\r\n\r\n\r\n    // if (dataArray===[] && loading === 'false'){\r\n    //\r\n    //     dataArray = value.docs.map(doc => ({ ...doc.data(), id: doc.id }));\r\n    // }\r\n\r\n    // dataArray=Product.docs.map(doc => ({ ...doc.data(), id: doc.id }));\r\n\r\n     // console.log(props.Product.value.docs.map(doc => ({ ...doc.data(), id: doc.id })));\r\n\r\n\r\n    const tablePropsInit = {\r\n        columns: [\r\n            {key: 'name', title: 'Name', dataType: DataType.String, style: {width: '30%'}},\r\n            {key: 'code', title: 'Code', dataType: DataType.Number, style: {width: '40px'}},\r\n            {key: 'price', title: 'Price', dataType: DataType.Boolean, style: {width: '10%'}},\r\n\r\n        ],\r\n        format: ({column, value}) => {\r\n            if (column.dataType === DataType.Date) {\r\n                return value && value.toLocaleDateString('en', {month: '2-digit', day: '2-digit', year: 'numeric'});\r\n            }\r\n        },\r\n        data: dataArray,\r\n        editableCells: [{\r\n            columnKey: 'name',\r\n            rowKeyValue: 2,\r\n        }],\r\n        editingMode: EditingMode.Cell,\r\n        rowKeyField: 'id',\r\n    };\r\n\r\n\r\n    const [tableProps, changeTableProps] = useState(tablePropsInit);\r\n    const dispatch = (action) => {\r\n        changeTableProps((prevState) => kaReducer(prevState, action));\r\n    };\r\n\r\n            return (\r\n                <Table\r\n                    {...tableProps}\r\n                    dispatch={dispatch}\r\n                />\r\n\r\n            )\r\n}\r\n\r\nexport default EditingDemo;\r\n","import React, { useRef, useState, useEffect } from \"react\"\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport firebase from \"../../firebase\";\r\nimport Prod_update from \"../prod_update/prod_update\";\r\nimport TableCompReact from \"../tableComp/tableComp-react\";\r\nimport BasicTable from '../tableComp/tableComp-datatable'\r\nimport EditingDemo from \"../tableComp/table-ka\"\r\nimport {useCollection} from \"react-firebase-hooks/firestore\";\r\n\r\nexport default function Prod_list() {\r\n    const [Product, setProduct] = useState([]);\r\n    const [newProductName, setNewProductName] = useState();\r\n    const [newProductPrice, setNewProductPrice] = useState();\r\n    const [newProductCode, setNewProductCode] = useState();\r\n\r\n\r\n    //this is react-firebase-hook works but have to async it somehow\r\n    const [value, loading, error] = useCollection(\r\n        firebase.firestore().collection('prod_list'),\r\n        {\r\n            snapshotListenOptions: { includeMetadataChanges: true },\r\n        }\r\n    );\r\n\r\n    const[Val1,setVal1] = useState([]);\r\n    // console.log(value.docs.map(doc => ({ ...doc.data(), id: doc.id })));\r\n\r\n\r\n    // this is custom firebase get data it works\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const db = firebase.firestore();\r\n            const data = await db.collection(\"prod_list\").get();\r\n            setProduct(data.docs.map(doc => ({ ...doc.data(), id: doc.id })));\r\n        };\r\n        fetchData();\r\n    }, [Product]);\r\n\r\n\r\n    const onCreate = () => {\r\n        const db = firebase.firestore();\r\n        db.collection(\"prod_list\").add({ name: newProductName , price: newProductPrice ,code: newProductCode  });\r\n        // db.collection(\"prod_list\").add({ price: newProductPrice });\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <div className={'row'}>\r\n                    <p>\r\n                        {/*{value && (\r\n                            <span>\r\n                                {value.docs.map((doc) => (\r\n                                    <React.Fragment key={doc.id}>\r\n                                        {JSON.stringify(doc.data())},{' '}\r\n                                    </React.Fragment>\r\n                                ))}\r\n                            </span>\r\n                        )}*/}\r\n                    </p>\r\n                </div>\r\n\r\n                    {/*Create New Product Code Here*/}\r\n                    <div className={'row p-5 mb-2'}>\r\n                        <input className={'form-control mt-2'} value={newProductCode} onChange={e => setNewProductCode(e.target.value)} placeholder={'New Product Code'}/>\r\n                        <input className={'form-control mt-2'} value={newProductName} onChange={e => setNewProductName(e.target.value)}  placeholder={'New Product Name'}/>\r\n                        <input className={'form-control mt-2'} value={newProductPrice} onChange={e => setNewProductPrice(e.target.value)}  placeholder={'New Product Price'}/>\r\n                        <button className={'btn btn-primary mt-2'} onClick={onCreate}>Create</button>\r\n                    </div>\r\n                    {/*Below Code To Update product*/}\r\n                    <div className={'row'}>\r\n                        <ul className={'w-100'}>\r\n                            {Product.map(Product => (\r\n                                <li key={Product.id}>\r\n                                    <Prod_update Product={Product} />\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n\r\n                <div className={'row p-2'}>\r\n                    <span>Ka-Table blank array</span>\r\n                    <EditingDemo Product={Product}/>\r\n                </div>\r\n                <div className={'row p-2'}>\r\n                    <span>react-table blank array</span>\r\n                    <TableCompReact  Product={Product}/>\r\n                </div>\r\n                <div className={'row p-2'}>\r\n                    <span>react-data-table blank array</span>\r\n                    <BasicTable Product={Product} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\"\r\nimport Signup from \"./components/signup/signup\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport { AuthProvider } from \"./contexts/AuthContext\"\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\nimport Dashboard from \"./components/dashboard/dashboard\"\r\nimport Login from \"./components/login/Login\"\r\nimport PrivateRoute from \"./routes/PrivateRoute\"\r\nimport ForgotPassword from \"./components/forgotpassword/ForgotPassword\"\r\nimport UpdateProfile from \"./components/updateprofile/UpdateProfile\"\r\nimport Prod_update from \"./components/prod_update/prod_update\"\r\nimport Prod_list from \"./components/prod_list/prod_list\"\r\n\r\nfunction App() {\r\n    return (\r\n        <Container\r\n            className=\"d-flex align-items-center justify-content-center\"\r\n            style={{ minHeight: \"100vh\" }}\r\n        >\r\n\r\n                <Router>\r\n                    <AuthProvider>\r\n                        <Switch>\r\n                            <PrivateRoute exact path=\"/\" component={Dashboard} />\r\n                            <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\r\n                            <PrivateRoute path=\"/product\" component={Prod_list} />\r\n\r\n                            <Route path=\"/signup\" component={Signup} />\r\n                            <Route path=\"/login\" component={Login} />\r\n                            <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n                        </Switch>\r\n                    </AuthProvider>\r\n                </Router>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}