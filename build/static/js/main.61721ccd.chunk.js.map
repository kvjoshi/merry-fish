{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/signup/signup.js","components/dashboard/dashboard.js","components/login/Login.js","routes/PrivateRoute.js","components/forgotpassword/ForgotPassword.js","components/updateprofile/UpdateProfile.js","components/prod_entry/prod_entry.js","components/tableComp/tableComp-react.js","components/tableComp/table-ka.js","components/prod_list/prod_list.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","className","Card","Body","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Dashboard","onClick","Login","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","UpdateProfile","promises","Promise","all","then","catch","finally","defaultValue","placeholder","Prod_entry","Product","name","setName","onChange","target","firestore","collection","doc","set","delete","TableCompReact","data","useMemo","col1","col2","columns","Header","accessor","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","style","border","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","borderBottom","background","color","fontWeight","row","getRowProps","cells","cell","getCellProps","padding","dataArray","score","passed","nextTry","Date","tablePropsInit","key","title","dataType","DataType","String","width","Number","Boolean","format","toLocaleDateString","month","day","year","editableCells","columnKey","rowKeyValue","editingMode","EditingMode","Cell","rowKeyField","EditingDemo","tableProps","changeTableProps","dispatch","action","prevState","kaReducer","Prod_list","setProduct","newProductName","setNewProductName","db","get","docs","fetchData","add","price","code","App","Container","minHeight","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"iPAGMA,G,YAAMC,IAASC,cAAc,CAC/BC,OAAQC,0CACRC,WAAYD,6BACZE,YAAaF,iDACbG,UAAWH,aACXI,cAAeJ,yBACfK,kBAAmBL,eACnBM,MAAON,4CACPO,cAAeP,kBAENQ,EAAOZ,EAAIY,OACTZ,I,OCXTa,EAAcC,IAAMC,gBAEnB,SAASC,IACZ,OAAOC,qBAAWJ,GAGf,SAASK,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAAY,EACDC,qBADC,mBAChCC,EADgC,KACnBC,EADmB,OAETF,oBAAS,GAFA,mBAEhCG,EAFgC,KAEvBC,EAFuB,KA4BvCC,qBAAU,WAMN,OALoBb,EAAKc,oBAAmB,SAAAC,GACxCL,EAAeK,GACfH,GAAW,QAIhB,IAEH,IAAMI,EAAQ,CACVP,cACAQ,MA/BJ,SAAeC,EAAOC,GAClB,OAAOnB,EAAKoB,2BAA2BF,EAAOC,IA+B9CE,OApCJ,SAAgBH,EAAOC,GACnB,OAAOnB,EAAKsB,+BAA+BJ,EAAOC,IAoClDI,OA7BJ,WACI,OAAOvB,EAAKwB,WA6BZC,cA1BJ,SAAuBP,GACnB,OAAOlB,EAAK0B,uBAAuBR,IA0BnCS,YAvBJ,SAAqBT,GACjB,OAAOT,EAAYkB,YAAYT,IAuB/BU,eApBJ,SAAwBT,GACpB,OAAOV,EAAYmB,eAAeT,KAsBtC,OACI,cAAClB,EAAY4B,SAAb,CAAsBb,MAAOA,EAA7B,UACML,GAAWJ,I,oBCrDV,SAASuB,IACtB,IAAMC,EAAWC,mBACXC,EAAcD,mBACdE,EAAqBF,mBACnBX,EAAWjB,IAAXiB,OAJuB,EAKLb,mBAAS,IALJ,mBAKxB2B,EALwB,KAKjBC,EALiB,OAMD5B,oBAAS,GANR,mBAMxBG,EANwB,KAMfC,EANe,KAOzByB,EAAUC,cAPe,4CAS/B,WAA4BC,GAA5B,SAAAC,EAAA,yDACED,EAAEE,iBAEER,EAAYS,QAAQ1B,QAAUkB,EAAmBQ,QAAQ1B,MAH/D,yCAIWoB,EAAS,2BAJpB,uBAQIA,EAAS,IACTxB,GAAW,GATf,SAUUS,EAAOU,EAASW,QAAQ1B,MAAOiB,EAAYS,QAAQ1B,OAV7D,OAWIqB,EAAQM,KAAK,KAXjB,kDAaIP,EAAS,+BAbb,QAgBExB,GAAW,GAhBb,2DAT+B,sBA4B/B,OACI,mCACE,sBAAKgC,UAAW,GAAhB,UACA,qBAAKA,UAAW,MAAhB,SACA,cAACC,EAAA,EAAD,UACE,eAACA,EAAA,EAAKC,KAAN,WACE,oBAAIF,UAAU,mBAAd,qBACCT,GAAS,cAACY,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBb,IACnC,eAACc,EAAA,EAAD,CAAMC,SApCe,4CAoCrB,UACE,eAACD,EAAA,EAAKE,MAAN,CAAYC,GAAG,QAAf,UACE,cAACH,EAAA,EAAKI,MAAN,oBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,QAAQC,IAAKzB,EAAU0B,UAAQ,OAEpD,eAACR,EAAA,EAAKE,MAAN,CAAYC,GAAG,WAAf,UACE,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,IAAKvB,EAAawB,UAAQ,OAE1D,eAACR,EAAA,EAAKE,MAAN,CAAYC,GAAG,mBAAf,UACE,cAACH,EAAA,EAAKI,MAAN,oCACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,IAAKtB,EAAoBuB,UAAQ,OAEjE,cAACC,EAAA,EAAD,CAAQC,SAAUhD,EAASiC,UAAU,aAAaW,KAAK,SAAvD,+BAON,sBAAKX,UAAU,6BAAf,UACE,4DACA,cAAC,IAAD,CAAMgB,GAAG,SAAT,4B,aC1DK,SAASC,IAAa,IAAD,EACNrD,mBAAS,IADH,mBACzB2B,EADyB,KAClBC,EADkB,OAEAhC,IAAxBK,EAFwB,EAExBA,YAAac,EAFW,EAEXA,OACfc,EAAUC,cAHgB,4CAKhC,sBAAAE,EAAA,6DACIJ,EAAS,IADb,kBAIcb,IAJd,OAKQc,EAAQM,KAAK,UALrB,gDAOQP,EAAS,qBAPjB,0DALgC,sBAgBhC,OACI,mCACI,sBAAKQ,UAAW,GAAhB,UACA,qBAAKA,UAAW,MAAhB,SACA,cAACC,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACI,oBAAIF,UAAU,mBAAd,qBACCT,GAAS,cAACY,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBb,IACnC,4CAHJ,IAG6B1B,EAAYS,MACrC,cAAC,IAAD,CAAM0C,GAAG,kBAAkBhB,UAAU,6BAArC,4BAKA,cAAC,IAAD,CAAMgB,GAAG,WAAWhB,UAAU,6BAA9B,mCAMR,qBAAKA,UAAU,yBAAf,SACI,cAACc,EAAA,EAAD,CAAQV,QAAQ,OAAOc,QArCH,2CAqCpB,4BCrCD,SAASC,IACpB,IAAMhC,EAAWC,mBACXC,EAAcD,mBACZf,EAAUb,IAAVa,MAHoB,EAIFT,mBAAS,IAJP,mBAIrB2B,EAJqB,KAIdC,EAJc,OAKE5B,oBAAS,GALX,mBAKrBG,EALqB,KAKZC,EALY,KAMtByB,EAAUC,cANY,4CAQ5B,WAA4BC,GAA5B,SAAAC,EAAA,6DACID,EAAEE,iBADN,SAIQL,EAAS,IACTxB,GAAW,GALnB,SAMcK,EAAMc,EAASW,QAAQ1B,MAAOiB,EAAYS,QAAQ1B,OANhE,OAOQqB,EAAQM,KAAK,KAPrB,gDASQP,EAAS,oBATjB,QAYIxB,GAAW,GAZf,0DAR4B,sBAuB5B,OACI,mCACI,sBAAKgC,UAAW,GAAhB,UACI,qBAAKA,UAAW,MAAhB,SACJ,cAACC,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACI,oBAAIF,UAAU,mBAAd,oBACCT,GAAS,cAACY,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBb,IACnC,eAACc,EAAA,EAAD,CAAMC,SA/BM,4CA+BZ,UACI,eAACD,EAAA,EAAKE,MAAN,CAAYC,GAAG,QAAf,UACI,cAACH,EAAA,EAAKI,MAAN,oBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,QAAQC,IAAKzB,EAAU0B,UAAQ,OAEtD,eAACR,EAAA,EAAKE,MAAN,CAAYC,GAAG,WAAf,UACI,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,IAAKvB,EAAawB,UAAQ,OAE5D,cAACC,EAAA,EAAD,CAAQC,SAAUhD,EAASiC,UAAU,aAAaW,KAAK,SAAvD,uBAIJ,qBAAKX,UAAU,yBAAf,SACI,cAAC,IAAD,CAAMgB,GAAG,mBAAT,uCAKZ,sBAAKhB,UAAU,6BAAf,UACI,oDACA,cAAC,IAAD,CAAMgB,GAAG,UAAT,6B,oBCrDD,SAASI,EAAT,GAA0D,IAAvBC,EAAsB,EAAjCC,UAAyBC,EAAQ,6BAC9D1D,EAAgBL,IAAhBK,YAER,OACE,cAAC,IAAD,2BACM0D,GADN,IAEEC,OAAQ,SAAAC,GACN,OAAO5D,EAAc,cAACwD,EAAD,eAAeI,IAAY,cAAC,IAAD,CAAUT,GAAG,eCNtD,SAASU,IACpB,IAAMvC,EAAWC,mBACTP,EAAkBrB,IAAlBqB,cAF6B,EAGXjB,mBAAS,IAHE,mBAG9B2B,EAH8B,KAGvBC,EAHuB,OAIP5B,mBAAS,IAJF,mBAI9B+D,EAJ8B,KAIrBC,EAJqB,OAKPhE,oBAAS,GALF,mBAK9BG,EAL8B,KAKrBC,EALqB,iDAOrC,WAA4B2B,GAA5B,SAAAC,EAAA,6DACID,EAAEE,iBADN,SAIQ+B,EAAW,IACXpC,EAAS,IACTxB,GAAW,GANnB,SAOca,EAAcM,EAASW,QAAQ1B,OAP7C,OAQQwD,EAAW,6CARnB,kDAUQpC,EAAS,4BAVjB,QAaIxB,GAAW,GAbf,2DAPqC,sBAuBrC,OACI,qCACI,cAACiC,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACI,oBAAIF,UAAU,mBAAd,4BACCT,GAAS,cAACY,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBb,IAClCoC,GAAW,cAACxB,EAAA,EAAD,CAAOC,QAAQ,UAAf,SAA0BuB,IACtC,eAACtB,EAAA,EAAD,CAAMC,SA9Be,4CA8BrB,UACI,eAACD,EAAA,EAAKE,MAAN,CAAYC,GAAG,QAAf,UACI,cAACH,EAAA,EAAKI,MAAN,oBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,QAAQC,IAAKzB,EAAU0B,UAAQ,OAEtD,cAACC,EAAA,EAAD,CAAQC,SAAUhD,EAASiC,UAAU,QAAQW,KAAK,SAAlD,+BAIJ,qBAAKX,UAAU,yBAAf,SACI,cAAC,IAAD,CAAMgB,GAAG,SAAT,0BAIZ,sBAAKhB,UAAU,yBAAf,8BACqB,cAAC,IAAD,CAAMgB,GAAG,UAAT,2BC7ClB,SAASa,IACpB,IAAM1C,EAAWC,mBACXC,EAAcD,mBACdE,EAAqBF,mBAHS,EAIiB5B,IAA7CK,EAJ4B,EAI5BA,YAAamB,EAJe,EAIfA,eAAgBD,EAJD,EAICA,YAJD,EAKVnB,mBAAS,IALC,mBAK7B2B,EAL6B,KAKtBC,EALsB,OAMN5B,oBAAS,GANH,mBAM7BG,EAN6B,KAMpBC,EANoB,KAO9ByB,EAAUC,cA+BhB,OACI,mCACI,sBAAKM,UAAW,GAAhB,UACA,qBAAKA,UAAW,MAAhB,SACA,cAACC,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACI,oBAAIF,UAAU,mBAAd,4BACCT,GAAS,cAACY,EAAA,EAAD,CAAOC,QAAQ,SAAf,SAAyBb,IACnC,eAACc,EAAA,EAAD,CAAMC,SArCtB,SAAsBX,GAElB,GADAA,EAAEE,iBACER,EAAYS,QAAQ1B,QAAUkB,EAAmBQ,QAAQ1B,MACzD,OAAOoB,EAAS,0BAGpB,IAAMsC,EAAW,GACjB9D,GAAW,GACXwB,EAAS,IAELL,EAASW,QAAQ1B,QAAUP,EAAYS,OACvCwD,EAAS/B,KAAKhB,EAAYI,EAASW,QAAQ1B,QAE3CiB,EAAYS,QAAQ1B,OACpB0D,EAAS/B,KAAKf,EAAeK,EAAYS,QAAQ1B,QAGrD2D,QAAQC,IAAIF,GACPG,MAAK,WACFxC,EAAQM,KAAK,QAEhBmC,OAAM,WACH1C,EAAS,+BAEZ2C,SAAQ,WACLnE,GAAW,OAYP,UACI,eAACqC,EAAA,EAAKE,MAAN,CAAYC,GAAG,QAAf,UACI,cAACH,EAAA,EAAKI,MAAN,oBACA,cAACJ,EAAA,EAAKK,QAAN,CACIC,KAAK,QACLC,IAAKzB,EACL0B,UAAQ,EACRuB,aAAcvE,EAAYS,WAGlC,eAAC+B,EAAA,EAAKE,MAAN,CAAYC,GAAG,WAAf,UACI,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CACIC,KAAK,WACLC,IAAKvB,EACLgD,YAAY,oCAGpB,eAAChC,EAAA,EAAKE,MAAN,CAAYC,GAAG,mBAAf,UACI,cAACH,EAAA,EAAKI,MAAN,oCACA,cAACJ,EAAA,EAAKK,QAAN,CACIC,KAAK,WACLC,IAAKtB,EACL+C,YAAY,oCAGpB,cAACvB,EAAA,EAAD,CAAQC,SAAUhD,EAASiC,UAAU,aAAaW,KAAK,SAAvD,8BAOZ,qBAAKX,UAAU,yBAAf,SACI,cAAC,IAAD,CAAMgB,GAAG,IAAT,2B,YCxDDsB,EA3BI,SAAC,GAAe,IAAbC,EAAY,EAAZA,QAAY,EAENjF,IAAMM,SAAS2E,EAAQC,MAFjB,mBAEvBA,EAFuB,KAEjBC,EAFiB,KAc9B,OACI,qCACI,uBACIrE,MAAOoE,EACPE,SAAU,SAAA/C,GACN8C,EAAQ9C,EAAEgD,OAAOvE,UAGzB,wBAAQ8C,QAlBC,WACFzE,IAASmG,YACjBC,WAAW,aAAaC,IAAIP,EAAQ/B,IAAIuC,IAA3C,2BAAmDR,GAAnD,IAA4DC,WAgBxD,oBACA,wBAAQtB,QAdC,WACFzE,IAASmG,YACjBC,WAAW,aAAaC,IAAIP,EAAQ/B,IAAIwC,UAYvC,wB,QC0FGC,MA/Gf,SAAwBxB,GAEpB,IAAMyB,EAAOC,mBACT,iBAAM,CACF,CACIC,KAAM,QACNC,KAAM,SAEV,CACID,KAAM,cACNC,KAAM,SAEV,CACID,KAAM,WACNC,KAAM,YACR,CACED,KAAM,WACNC,KAAM,YACR,CACED,KAAM,WACNC,KAAM,YACR,CACED,KAAM,WACNC,KAAM,YACR,CACED,KAAM,WACNC,KAAM,YACR,CACED,KAAM,WACNC,KAAM,YACR,CACED,KAAM,WACNC,KAAM,YACR,CACED,KAAM,WACNC,KAAM,eAER,IACJC,EAAUhG,IAAM6F,SAClB,iBAAM,CACF,CACII,OAAQ,WACRC,SAAU,QAEd,CACID,OAAQ,WACRC,SAAU,WAGlB,IAjDuB,GAkDLC,mBAAS,CAAEH,UAASJ,SAQtCO,mBAAS,CAAEH,UAASJ,UALpBQ,EArDuB,EAqDvBA,cACAC,EAtDuB,EAsDvBA,kBACAC,EAvDuB,EAuDvBA,aACAC,EAxDuB,EAwDvBA,KACAC,EAzDuB,EAyDvBA,WAIJ,OACI,mCACI,kDAAWJ,KAAX,IAA4BK,MAAO,CAAEC,OAAQ,kBAA7C,UACI,gCACCJ,EAAaK,KAAI,SAAAC,GAAW,OACzB,8CAAQA,EAAYC,uBAApB,aACKD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAC3B,8CACQA,EAAOC,kBADf,IAEIP,MAAO,CACHQ,aAAc,gBACdC,WAAY,YACZC,MAAO,QACPC,WAAY,QANpB,SASKL,EAAO7C,OAAO,wBAM/B,iDAAWmC,KAAX,aACCE,EAAKI,KAAI,SAAAU,GAEN,OADAb,EAAWa,GAEP,8CAAQA,EAAIC,eAAZ,aACKD,EAAIE,MAAMZ,KAAI,SAAAa,GACX,OACI,8CACQA,EAAKC,gBADb,IAEIhB,MAAO,CACHiB,QAAS,OACThB,OAAQ,iBACRQ,WAAY,cALpB,SAQKM,EAAKtD,OAAO,8B,wBChG/CyD,G,OAAY,CACd,CAAEzE,GAAI,EAAGgC,KAAM,gBAAiB0C,MAAO,GAAIC,QAAQ,GACnD,CAAE3E,GAAI,EAAGgC,KAAM,YAAa0C,MAAO,GAAIC,QAAQ,EAAOC,QAAS,IAAIC,KAAK,KAAM,GAAI,EAAG,KACrF,CAAE7E,GAAI,EAAGgC,KAAM,eAAgB0C,MAAO,GAAIC,QAAQ,EAAOC,QAAS,IAAIC,KAAK,KAAM,GAAI,EAAG,KACxF,CAAE7E,GAAI,EAAGgC,KAAM,cAAe0C,MAAO,GAAIC,QAAQ,GACjD,CAAE3E,GAAI,EAAGgC,KAAM,iBAAkB0C,MAAO,GAAIC,QAAQ,GACpD,CAAE3E,GAAI,EAAGgC,KAAM,YAAa0C,MAAO,GAAIC,QAAQ,EAAOC,QAAS,IAAIC,KAAK,KAAM,GAAI,EAAG,OAGnFC,EAAiB,CACnBhC,QAAS,CACL,CAAEiC,IAAK,OAAQC,MAAO,OAAQC,SAAUC,WAASC,OAAQ5B,MAAO,CAAE6B,MAAO,QACzE,CAAEL,IAAK,QAASC,MAAO,QAASC,SAAUC,WAASG,OAAQ9B,MAAO,CAAE6B,MAAO,SAC3E,CAAEL,IAAK,SAAUC,MAAO,SAAUC,SAAUC,WAASI,QAAS/B,MAAO,CAAE6B,MAAO,QAC9E,CACIH,SAAUC,WAASL,KACnBE,IAAK,UACLC,MAAO,aAGfO,OAAQ,YAAwB,IAArB1B,EAAoB,EAApBA,OAAQjG,EAAY,EAAZA,MACf,GAAIiG,EAAOoB,WAAaC,WAASL,KAC7B,OAAOjH,GAASA,EAAM4H,mBAAmB,KAAM,CAAEC,MAAO,UAAWC,IAAK,UAAWC,KAAM,aAGjGjD,KAAM+B,EACNmB,cAAe,CAAC,CACZC,UAAW,OACXC,YAAa,IAEjBC,YAAaC,cAAYC,KACzBC,YAAa,MAiBFC,EAdK,WAAO,IAAD,EACiB/I,mBAAS0H,GAD1B,mBACfsB,EADe,KACHC,EADG,KAMtB,OACI,cAAC,QAAD,2BACQD,GADR,IAEIE,SAPS,SAACC,GACdF,GAAiB,SAACG,GAAD,OAAeC,oBAAUD,EAAWD,WClC9C,SAASG,IAAa,IAAD,EACF5J,IAAMM,SAAS,IADb,mBACzB2E,EADyB,KAChB4E,EADgB,OAEY7J,IAAMM,WAFlB,mBAEzBwJ,EAFyB,KAETC,EAFS,KAIhC/J,IAAMW,WAAU,YACG,uCAAG,8BAAA2B,EAAA,6DACR0H,EAAK7K,EAASmG,YADN,SAEK0E,EAAGzE,WAAW,aAAa0E,MAFhC,OAERrE,EAFQ,OAGdiE,EAAWjE,EAAKsE,KAAKvD,KAAI,SAAAnB,GAAG,kCAAUA,EAAII,QAAd,IAAsB1C,GAAIsC,EAAItC,SAH5C,2CAAH,qDAKfiH,KACD,IAQH,OACI,mCACI,gCACJ,sBAAKzH,UAAW,MAAhB,UACA,sBAAKA,UAAW,WAAhB,UACI,uBAAO5B,MAAOgJ,EAAgB1E,SAAU,SAAA/C,GAAC,OAAI0H,EAAkB1H,EAAEgD,OAAOvE,UACxE,wBAAQ8C,QAZC,WACFzE,EAASmG,YACjBC,WAAW,aAAa6E,IAAI,CAAElF,KAAM4E,KAUnC,uBAEJ,qBAAKpH,UAAW,WAAhB,SACI,oBAAIA,UAAW,QAAf,SACKuC,EAAQ0B,KAAI,SAAA1B,GAAO,OAChB,+BACI,cAAC,EAAD,CAAYA,QAASA,IACrB,oDAAuBA,EAAQoF,SAC/B,mDAAsBpF,EAAQqF,UAHzBrF,EAAQC,gBAW7B,qBAAKxC,UAAW,MAAhB,SACI,cAAC,EAAD,MAEJ,qBAAKA,UAAW,MAAhB,SACI,cAAC,EAAD,WChBG6H,MAzBf,WACI,OACI,cAACC,EAAA,EAAD,CACI9H,UAAU,mDACV+D,MAAO,CAAEgE,UAAW,SAFxB,SAKQ,cAAC,IAAD,UACI,cAACrK,EAAD,UACI,eAAC,IAAD,WACI,cAAC0D,EAAD,CAAc4G,OAAK,EAACC,KAAK,IAAI3G,UAAWL,IACxC,cAACG,EAAD,CAAc6G,KAAK,kBAAkB3G,UAAWO,IAChD,cAACT,EAAD,CAAc6G,KAAK,WAAW3G,UAAW4F,IAEzC,cAAC,IAAD,CAAOe,KAAK,UAAU3G,UAAWpC,IACjC,cAAC,IAAD,CAAO+I,KAAK,SAAS3G,UAAWH,IAChC,cAAC,IAAD,CAAO8G,KAAK,mBAAmB3G,UAAWI,c,OCvBtEwG,IAAS1G,OACP,cAAC,IAAM2G,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.61721ccd.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/firestore\"\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n})\r\nexport const auth = app.auth()\r\nexport default app\r\n","import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../firebase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function signup(email, password) {\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function login(email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function logout() {\r\n        return auth.signOut()\r\n    }\r\n\r\n    function resetPassword(email) {\r\n        return auth.sendPasswordResetEmail(email)\r\n    }\r\n\r\n    function updateEmail(email) {\r\n        return currentUser.updateEmail(email)\r\n    }\r\n\r\n    function updatePassword(password) {\r\n        return currentUser.updatePassword(password)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        signup,\r\n        logout,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\n\r\nexport default function Signup() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { signup } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await signup(emailRef.current.value, passwordRef.current.value)\r\n      history.push(\"/\")\r\n    } catch {\r\n      setError(\"Failed to create an account\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n      <>\r\n        <div className={\"\"}>\r\n        <div className={\"row\"}>\r\n        <Card>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"email\" ref={emailRef} required />\r\n              </Form.Group>\r\n              <Form.Group id=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" ref={passwordRef} required />\r\n              </Form.Group>\r\n              <Form.Group id=\"password-confirm\">\r\n                <Form.Label>Password Confirmation</Form.Label>\r\n                <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n              </Form.Group>\r\n              <Button disabled={loading} className=\"w-100 mt-2\" type=\"submit\">\r\n                Sign Up\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n        </div>\r\n        <div className=\"w-100 text-center mt-2 row\">\r\n          <span>Already have an account?</span>\r\n          <Link to=\"/login\">Log In</Link>\r\n        </div>\r\n        </div>\r\n\r\n      </>\r\n  )\r\n}\r\n","import React, { useState } from \"react\"\r\nimport { Card, Button, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\n\r\nexport default function Dashboard() {\r\n    const [error, setError] = useState(\"\")\r\n    const { currentUser, logout } = useAuth()\r\n    const history = useHistory()\r\n\r\n    async function handleLogout() {\r\n        setError(\"\")\r\n\r\n        try {\r\n            await logout()\r\n            history.push(\"/login\")\r\n        } catch {\r\n            setError(\"Failed to log out\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={\"\"}>\r\n            <div className={\"row\"}>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Profile</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <strong>Email:</strong> {currentUser.email}\r\n                    <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">\r\n                        Update Profile\r\n                    </Link>\r\n\r\n\r\n                    <Link to=\"/product\" className=\"btn btn-primary w-100 mt-3\">\r\n                        Insert Product\r\n                    </Link>\r\n                </Card.Body>\r\n            </Card>\r\n            </div>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                <Button variant=\"link\" onClick={handleLogout}>\r\n                    Log Out\r\n                </Button>\r\n            </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { Link, useHistory } from \"react-router-dom\"\r\n\r\nexport default function Login() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const { login } = useAuth()\r\n    const [error, setError] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        } catch {\r\n            setError(\"Failed to log in\")\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={\"\"}>\r\n                <div className={\"row\"}>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Log In</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100 mt-3\" type=\"submit\">\r\n                            Log In\r\n                        </Button>\r\n                    </Form>\r\n                    <div className=\"w-100 text-center mt-3\">\r\n                        <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n                </div>\r\n            <div className=\"w-100 text-center mt-2 row\">\r\n                <span>Need an account?</span>\r\n                <Link to=\"/signup\">Sign Up</Link>\r\n            </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }}\r\n    ></Route>\r\n  )\r\n}\r\n","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../../contexts/AuthContext\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport default function ForgotPassword() {\r\n    const emailRef = useRef()\r\n    const { resetPassword } = useAuth()\r\n    const [error, setError] = useState(\"\")\r\n    const [message, setMessage] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setMessage(\"\")\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await resetPassword(emailRef.current.value)\r\n            setMessage(\"Check your inbox for further instructions\")\r\n        } catch {\r\n            setError(\"Failed to reset password\")\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Password Reset</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    {message && <Alert variant=\"success\">{message}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                            Reset Password\r\n                        </Button>\r\n                    </Form>\r\n                    <div className=\"w-100 text-center mt-3\">\r\n                        <Link to=\"/login\">Login</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState } from \"react\"\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\n\r\nexport default function UpdateProfile() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { currentUser, updatePassword, updateEmail } = useAuth()\r\n    const [error, setError] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError(\"Passwords do not match\")\r\n        }\r\n\r\n        const promises = []\r\n        setLoading(true)\r\n        setError(\"\")\r\n\r\n        if (emailRef.current.value !== currentUser.email) {\r\n            promises.push(updateEmail(emailRef.current.value))\r\n        }\r\n        if (passwordRef.current.value) {\r\n            promises.push(updatePassword(passwordRef.current.value))\r\n        }\r\n\r\n        Promise.all(promises)\r\n            .then(() => {\r\n                history.push(\"/\")\r\n            })\r\n            .catch(() => {\r\n                setError(\"Failed to update account\")\r\n            })\r\n            .finally(() => {\r\n                setLoading(false)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={\"\"}>\r\n            <div className={\"row\"}>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Update Profile</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                ref={emailRef}\r\n                                required\r\n                                defaultValue={currentUser.email}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                ref={passwordRef}\r\n                                placeholder=\"Leave blank to keep the same\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password-confirm\">\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                ref={passwordConfirmRef}\r\n                                placeholder=\"Leave blank to keep the same\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Button disabled={loading} className=\"w-100 mt-2\" type=\"submit\">\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            </div>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                <Link to=\"/\">Cancel</Link>\r\n            </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React ,{useState} from 'react';\r\nimport firebase from 'firebase';\r\nconst Prod_entry = ({ Product })=>{\r\n\r\n    const [name, setName] = React.useState(Product.name);\r\n\r\n    const onUpdate = () => {\r\n        const db = firebase.firestore()\r\n        db.collection('prod_list').doc(Product.id).set({...Product, name})\r\n    }\r\n\r\n    const onDelete = () => {\r\n        const db = firebase.firestore()\r\n        db.collection('prod_list').doc(Product.id).delete()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                value={name}\r\n                onChange={e => {\r\n                    setName(e.target.value);\r\n                }}\r\n            />\r\n            <button onClick={onUpdate}>Update</button>\r\n            <button onClick={onDelete}>Delete</button>\r\n        </>\r\n    );\r\n};\r\nexport default Prod_entry;\r\n","import React ,{ useMemo } from 'react';\r\nimport { useTable} from \"react-table\";\r\n\r\n\r\nfunction TableCompReact(props) {\r\n\r\n    const data = useMemo(\r\n        () => [\r\n            {\r\n                col1: 'Hello',\r\n                col2: 'World',\r\n            },\r\n            {\r\n                col1: 'react-table',\r\n                col2: 'rocks',\r\n            },\r\n            {\r\n                col1: 'whatever',\r\n                col2: 'you want',\r\n            },{\r\n                col1: 'whatever',\r\n                col2: 'you want',\r\n            },{\r\n                col1: 'whatever',\r\n                col2: 'you want',\r\n            },{\r\n                col1: 'whatever',\r\n                col2: 'you want',\r\n            },{\r\n                col1: 'whatever',\r\n                col2: 'you want',\r\n            },{\r\n                col1: 'whatever',\r\n                col2: 'you want',\r\n            },{\r\n                col1: 'whatever',\r\n                col2: 'you want',\r\n            },{\r\n                col1: 'whatever',\r\n                col2: 'you want',\r\n            },\r\n        ],    []);\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Column 1',\r\n                accessor: 'col1', // accessor is the \"key\" in the data\r\n            },\r\n            {\r\n                Header: 'Column 2',\r\n                accessor: 'col2',\r\n            },\r\n        ],\r\n        [])\r\n    const tableInstance = useTable({ columns, data })\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n    } = useTable({ columns, data })\r\n\r\n\r\n    return (\r\n        <>\r\n            <table {...getTableProps()} style={{ border: 'solid 1px blue' }}>\r\n                <thead>\r\n                {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map(column => (\r\n                            <th\r\n                                {...column.getHeaderProps()}\r\n                                style={{\r\n                                    borderBottom: 'solid 3px red',\r\n                                    background: 'aliceblue',\r\n                                    color: 'black',\r\n                                    fontWeight: 'bold',\r\n                                }}\r\n                            >\r\n                                {column.render('Header')}\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                {rows.map(row => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                return (\r\n                                    <td\r\n                                        {...cell.getCellProps()}\r\n                                        style={{\r\n                                            padding: '10px',\r\n                                            border: 'solid 1px gray',\r\n                                            background: 'papayawhip',\r\n                                        }}\r\n                                    >\r\n                                        {cell.render('Cell')}\r\n                                    </td>\r\n                                )\r\n                            })}\r\n                        </tr>\r\n                    )\r\n                })}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TableCompReact;\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport \"ka-table/style.css\"\r\nimport { ITableProps, kaReducer, Table } from 'ka-table';\r\nimport { DataType, EditingMode } from 'ka-table/enums';\r\nimport { DispatchFunc } from 'ka-table/types';\r\n\r\nconst dataArray = [\r\n    { id: 1, name: 'Mike Wazowski', score: 80, passed: true },\r\n    { id: 2, name: 'Billi Bob', score: 55, passed: false, nextTry: new Date(2021, 10, 8, 10) },\r\n    { id: 3, name: 'Tom Williams', score: 45, passed: false, nextTry: new Date(2021, 11, 8, 10) },\r\n    { id: 4, name: 'Kurt Cobain', score: 75, passed: true },\r\n    { id: 5, name: 'Marshall Bruce', score: 77, passed: true },\r\n    { id: 6, name: 'Sunny Fox', score: 33, passed: false, nextTry: new Date(2021, 10, 9, 10) },\r\n];\r\n\r\nconst tablePropsInit = {\r\n    columns: [\r\n        { key: 'name', title: 'Name', dataType: DataType.String, style: { width: '30%' } },\r\n        { key: 'score', title: 'Score', dataType: DataType.Number, style: { width: '40px' } },\r\n        { key: 'passed', title: 'Passed', dataType: DataType.Boolean, style: { width: '10%' }},\r\n        {\r\n            dataType: DataType.Date,\r\n            key: 'nextTry',\r\n            title: 'Next Try',\r\n        },\r\n    ],\r\n    format: ({ column, value }) => {\r\n        if (column.dataType === DataType.Date){\r\n            return value && value.toLocaleDateString('en', { month: '2-digit', day: '2-digit', year: 'numeric' });\r\n        }\r\n    },\r\n    data: dataArray,\r\n    editableCells: [{\r\n        columnKey: 'name',\r\n        rowKeyValue: 2,\r\n    }],\r\n    editingMode: EditingMode.Cell,\r\n    rowKeyField: 'id',\r\n};\r\n\r\nconst EditingDemo = () => {\r\n    const [tableProps, changeTableProps] = useState(tablePropsInit);\r\n    const dispatch = (action) => {\r\n        changeTableProps((prevState) => kaReducer(prevState, action));\r\n    };\r\n\r\n    return (\r\n        <Table\r\n            {...tableProps}\r\n            dispatch={dispatch}\r\n        />\r\n    );\r\n};\r\n\r\nexport default EditingDemo;\r\n","import React, { useRef, useState, useEffect } from \"react\"\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"../../contexts/AuthContext\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport firebase from \"../../firebase\";\r\nimport Prod_entry from \"../prod_entry/prod_entry\";\r\nimport TableCompReact from \"../tableComp/tableComp-react\";\r\nimport EditingDemo from \"../tableComp/table-ka\"\r\n\r\nexport default function Prod_list() {\r\n    const [Product, setProduct] = React.useState([]);\r\n    const [newProductName, setNewProductName] = React.useState();\r\n\r\n    React.useEffect(() => {\r\n        const fetchData = async () => {\r\n            const db = firebase.firestore();\r\n            const data = await db.collection(\"prod_list\").get();\r\n            setProduct(data.docs.map(doc => ({ ...doc.data(), id: doc.id })));\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    const onCreate = () => {\r\n        const db = firebase.firestore();\r\n        db.collection(\"prod_list\").add({ name: newProductName });\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n        <div className={'row'}>\r\n        <div className={'col-md-5'}>\r\n            <input value={newProductName} onChange={e => setNewProductName(e.target.value)} />\r\n            <button onClick={onCreate}>Create</button>\r\n        </div>\r\n        <div className={'col-md-7'}>\r\n            <ul className={'w-100'}>\r\n                {Product.map(Product => (\r\n                    <li key={Product.name}>\r\n                        <Prod_entry Product={Product} />\r\n                        <span>Product Price : {Product.price}</span>\r\n                        <span>Product Code : {Product.code}</span>\r\n\r\n                    </li>\r\n                ))}\r\n\r\n            </ul>\r\n        </div>\r\n        </div>\r\n        <div className={'row'}>\r\n            <EditingDemo></EditingDemo>\r\n        </div>\r\n        <div className={'row'}>\r\n            <TableCompReact></TableCompReact>\r\n        </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\"\r\nimport Signup from \"./components/signup/signup\"\r\nimport { Container } from \"react-bootstrap\"\r\nimport { AuthProvider } from \"./contexts/AuthContext\"\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\nimport Dashboard from \"./components/dashboard/dashboard\"\r\nimport Login from \"./components/login/Login\"\r\nimport PrivateRoute from \"./routes/PrivateRoute\"\r\nimport ForgotPassword from \"./components/forgotpassword/ForgotPassword\"\r\nimport UpdateProfile from \"./components/updateprofile/UpdateProfile\"\r\nimport Prod_entry from \"./components/prod_entry/prod_entry\"\r\nimport Prod_list from \"./components/prod_list/prod_list\"\r\n\r\nfunction App() {\r\n    return (\r\n        <Container\r\n            className=\"d-flex align-items-center justify-content-center\"\r\n            style={{ minHeight: \"100vh\" }}\r\n        >\r\n\r\n                <Router>\r\n                    <AuthProvider>\r\n                        <Switch>\r\n                            <PrivateRoute exact path=\"/\" component={Dashboard} />\r\n                            <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\r\n                            <PrivateRoute path=\"/product\" component={Prod_list} />\r\n\r\n                            <Route path=\"/signup\" component={Signup} />\r\n                            <Route path=\"/login\" component={Login} />\r\n                            <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n                        </Switch>\r\n                    </AuthProvider>\r\n                </Router>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}